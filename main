package net.minecraft.client;

import java.io.BufferedReader;
import java.io.DataOutputStream;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.URL;
import java.net.URLEncoder;

import net.minecraft.src.Session;

public class MinecraftAuth {
	public MinecraftAuth() {	
		super();
	}
	
	public Session authSession(){
		return new Session(username, getSession());
	}
	private String username = "user";
	
	private String getPasswordFor(String name){
		String password = "";
		if(name.equals("user1")){
			password = "password1";
		}
		if(name.equals("user2")){
			password = "password2";
		}
		if(name.equals("user3")){
			password = "password3";
		}
		return password;
	}

	private String getSession() {
		String result = null;
		try {
			String parameters = (new StringBuilder("user=")).append(URLEncoder.encode(username, "UTF-8")).append("&password=").append(URLEncoder.encode(getPasswordFor(username), "UTF-8")).append("&version=").append(12).toString();
			result = createNewSession("https://login.minecraft.net/", parameters);
		} catch(Exception e) {
			e.printStackTrace();
		}
		if(result == null) {
			return "";
		}

		if(!result.contains(":")) {
			return "";
		}
		String values[] = result.split(":");
		return values[3].trim();
	}
	private String createNewSession(String targetURL, String urlParameters) {
		HttpURLConnection connection = null;
		boolean trying = false;
		String rawResponse;
		label84: {
			try {
				trying = true;
				URL url = new URL(targetURL);
				connection = (HttpURLConnection)url.openConnection();
				connection.setRequestMethod("POST");
				connection.setRequestProperty("Content-Type", "application/x-www-form-urlencoded");
				connection.setRequestProperty("Content-Length", Integer.toString(urlParameters.getBytes().length));
				connection.setRequestProperty("Content-Language", "en-US");
				connection.setUseCaches(false);
				connection.setDoInput(true);
				connection.setDoOutput(true);
				DataOutputStream e = new DataOutputStream(connection.getOutputStream());
				e.writeBytes(urlParameters);
				e.flush();
				e.close();
				InputStream is = connection.getInputStream();
				BufferedReader rd = new BufferedReader(new InputStreamReader(is));
				StringBuffer response = new StringBuffer();
				String line;
				while((line = rd.readLine()) != null) {
					response.append(line);
					System.out.println(line);
					response.append('\r');
				}
				rd.close();
				rawResponse = response.toString();
				trying = false;
				break label84;
			} catch (Exception var14) {
				var14.printStackTrace();
				trying = false;
			} finally {
				if(trying) {
					if(connection != null) {
						connection.disconnect();
					}
				}
			}
			if(connection != null) {
				connection.disconnect();
			}
			return null;
		}
		if(connection != null) {
			connection.disconnect();
		}
		return rawResponse;
	}


}
